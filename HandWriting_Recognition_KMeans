import codecademylib3_seaborn
import numpy as np
from matplotlib import pyplot as plt
from sklearn import datasets
from sklearn.cluster import KMeans

digits = datasets.load_digits()
#print(digits)
#print(digits.DESCR)
#print(digits.data)
#print(digits.target)

plt.gray() 
plt.matshow(digits.images[100])
plt.show()

#print(digits.target[100])

# Figure size (width, height)

'''fig = plt.figure(figsize=(6, 6))

# Adjust the subplots 

fig.subplots_adjust(left=0, right=1, bottom=0, top=1, hspace=0.05, wspace=0.05)

# For each of the 64 images

for i in range(64):

    # Initialize the subplots: add a subplot in the grid of 8 by 8, at the i+1-th position

    ax = fig.add_subplot(8, 8, i+1, xticks=[], yticks=[])

    # Display an image at the i-th position

    ax.imshow(digits.images[i], cmap=plt.cm.binary, interpolation='nearest')

    # Label the image with the target value

    ax.text(0, 7, str(digits.target[i]))

plt.show()'''

new_samples = np.array([
[0.23,3.36,3.81,3.36,0.38,0.00,0.00,0.00,2.47,6.25,3.81,6.33,6.48,0.54,0.00,0.00,0.00,0.00,0.00,0.15,5.95,4.12,0.00,0.00,0.00,0.00,0.00,0.00,2.67,6.78,0.00,0.00,0.23,1.52,1.52,1.07,0.84,7.62,0.00,0.00,2.29,7.32,6.10,7.55,5.42,7.62,0.00,0.00,1.83,7.32,1.68,1.15,7.01,7.63,1.76,0.00,0.00,4.12,7.55,7.62,7.02,5.03,5.90,0.00],
[0.00,3.21,3.81,3.74,1.15,0.00,0.00,0.00,0.61,7.40,5.20,5.03,7.40,2.37,0.00,0.00,2.67,6.71,0.00,0.00,2.83,7.32,0.91,0.00,2.97,5.79,0.00,0.00,0.00,5.80,3.74,0.00,2.29,6.10,0.00,0.00,0.00,3.89,4.57,0.00,1.91,7.24,0.85,0.00,0.00,4.80,4.35,0.00,0.08,5.58,6.10,1.83,2.75,7.47,1.83,0.00,0.00,0.23,4.73,6.10,6.10,2.98,0.00,0.00],
[0.00,1.22,3.05,1.68,0.00,0.00,0.00,0.00,0.00,5.26,6.02,7.40,5.19,0.31,0.00,0.00,0.00,0.38,0.15,0.99,6.10,5.11,0.00,0.00,0.15,0.76,0.76,0.23,1.07,7.55,1.22,0.00,4.12,7.24,7.09,6.86,2.52,6.40,2.29,0.00,4.57,4.80,0.15,3.13,7.32,7.55,1.45,0.00,1.83,7.09,6.56,6.10,7.25,7.48,1.68,0.00,0.00,0.46,1.52,1.52,1.52,4.50,2.82,0.00],
[0.00,0.00,2.52,3.81,3.81,2.07,0.00,0.00,0.00,1.84,7.48,4.12,5.88,5.88,0.00,0.00,0.00,3.05,5.65,0.08,5.88,4.90,0.00,0.00,0.00,2.29,7.40,6.33,7.62,2.82,0.00,0.00,0.00,0.00,3.52,7.55,4.73,7.24,0.53,0.00,0.00,0.00,6.95,3.74,0.00,6.79,2.29,0.00,0.00,0.00,7.62,2.44,4.05,7.48,1.14,0.00,0.00,0.00,5.04,6.10,5.64,2.06,0.00,0.00]
])

model = KMeans(n_clusters = 10, random_state=42)
model.fit(digits.data)

new_labels = model.predict(new_samples)
for i in range(len(new_labels)):
  if new_labels[i] == 0:
    print(0, end='')
  elif new_labels[i] == 1:
    print(9, end='')
  elif new_labels[i] == 2:
    print(2, end='')
  elif new_labels[i] == 3:
    print(1, end='')
  elif new_labels[i] == 4:
    print(6, end='')
  elif new_labels[i] == 5:
    print(8, end='')
  elif new_labels[i] == 6:
    print(4, end='')
  elif new_labels[i] == 7:
    print(5, end='')
  elif new_labels[i] == 8:
    print(7, end='')
  elif new_labels[i] == 9:
    print(3, end='')
print(new_labels)

fig = plt.figure(figsize =(8, 3))
plt.suptitle('Cluser Center Images', fontsize=14, fontweight='bold')

for i in range(10):

  # Initialize subplots in a grid of 2X5, at i+1th position
  ax = fig.add_subplot(2, 5, 1 + i)

  # Display images
  ax.imshow(model.cluster_centers_[i].reshape((8, 8)), cmap=plt.cm.binary)

plt.show()
